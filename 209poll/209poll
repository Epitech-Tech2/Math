#!/usr/bin/env python3
##
## EPITECH PROJECT, 2022
## delivery
## File description:
## 209poll
##

from sys import argv
from math import sqrt, pow
import csv
from unittest import result

def print_help ():
    print("USAGE")
    print("    ./209poll pSize sSize p\n")
    print("DESCRIPTION")
    print("    pSize   size of the population")
    print("    sSize   size of the sample (supposed to be representative)")
    print("    p   percentage of voting intentions for a specific candidate")

def poll (pSize, sSize, p):
    variance = 0
    confidence95 = 0
    confidence99 = 0
    res = 0
    res2 = 0
    res99 = 0
    res2_99 = 0
    variance = (((p * (100 - p)) / 10000) / sSize) * ((pSize - sSize) / (pSize - 1))
    confidence95 = (1.96 * sqrt(variance) * 2) / 2 * 100
    confidence99 = (2.58 * sqrt(variance) * 2) / 2 * 100
    if p - confidence95 < 0:
        res = 0
    else:
        res = p - confidence95
    if p + confidence95 > 100:
        res2 = 100
    else:
        res2 = p + confidence95
    if p - confidence99 < 0:
        res99 = 0
    else:
        res99 = p - confidence99
    if p + confidence99 > 100:
        res2_99 = 100
    else:
        res2_99 = p + confidence99
    print("population size:\t\t{:1d}".format(pSize))
    print("sample size:\t\t\t{:1d}".format(sSize))
    print("voting intentions:\t\t{:.2f}%".format(p))
    print("variance:\t\t\t{:.6f}".format(variance))
    print("95% confidence interval:\t[{:.2f}% ; {:.2f}%]".format(res, res2))
    print("99% confidence interval:\t[{:.2f}% ; {:.2f}%]".format(res99, res2_99))

def check_argv ():
    pSize = int(argv[1])
    sSize = int(argv[2])
    p = float(argv[3])
    if pSize < 0 or sSize < 0:
        exit(84)
    if 0 < p > 100:
        exit(84)
    poll(pSize, sSize, p)

if __name__ == "__main__":
    try:
        if len(argv) == 2 and argv[1] == "-h":
            print_help()
        elif len(argv) == 4:
            check_argv()
        else:
            raise Exception("Invalid number of argument\n")
    except Exception as excp:
        print("Error:", excp)
        exit(84)